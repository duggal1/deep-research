// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid()) // Or @default(uuid())
  clerkId   String?  @unique // Make Clerk ID optional
  custom_id String   @unique @default(uuid()) // Add custom UUID identifier
  email     String   @unique
  name      String
  avatar    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  searchHistory SearchHistory[]
}

model SearchHistory {
  id        String   @id @default(cuid())
  query     String
  userId    String
  createdAt DateTime @default(now())
  
  // Remove the Collection references since it's not defined
  // collectionId String?
  // collection   Collection? @relation(fields: [collectionId], references: [id], onDelete: SetNull)

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  // @@index([collectionId])
  @@index([userId, createdAt])
}

// Uncomment and complete if you need a Collection model
// model Collection {
//   id        String   @id @default(cuid())
//   name      String
//   userId    String
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
//   
//   // Relations
//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)
//   searchHistory SearchHistory[]
//   
//   @@index([userId])
// }
